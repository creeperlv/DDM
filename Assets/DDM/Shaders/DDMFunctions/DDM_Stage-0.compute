// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel FirstPass
#pragma kernel SecondPass
#define MAX_X 256
// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;
//IN

StructuredBuffer<float4x4> BoneM;
StructuredBuffer<float4> BoneBinding;//Per Vertex
StructuredBuffer<float3> Vertices;
StructuredBuffer<float3> Normals;
StructuredBuffer<float4> Psis;

float Psi;

RWStructuredBuffer<float3> O_Vert;
RWStructuredBuffer<float3> O_Nor;
[numthreads(MAX_X, 1, 1)]
void FirstPass(uint3 id : SV_DispatchThreadID)
{
    float4x4 Omega;
    float3x3 Q;
    float3x1 p;
    float1x3 q;
    float1x3 pT;
    Result[id.xy] = float4(id.x & id.y, (id.x & 15) / 15.0, (id.y & 15) / 15.0, 0.0);
}
[numthreads(MAX_X, 8, 1)]
void SecondPass(uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!

    Result[id.xy] = float4(id.x & id.y, (id.x & 15) / 15.0, (id.y & 15) / 15.0, 0.0);
}
